version: "3.8"
services:
  postgres:
    image: bitnami/postgresql:latest
    container_name: postgres-baso
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRESQL_USERNAME=baso
      - POSTGRESQL_PASSWORD=baso_secret
      - POSTGRESQL_DATABASE=baso-social
    networks:
      - social

  redis:
    image: redis:6.0
    container_name: redis-baso
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-baso:/data
    environment:
      - REDIS_PASSWORD=baso_redis
    networks:
      - social
    command: /bin/sh -c 'redis-server --appendonly yes --requirepass $$REDIS_PASSWORD'

  nestjs:
    build:
      context: ./baso-social-nest # Đường dẫn đến thư mục chứa Dockerfile NestJS
      dockerfile: Dockerfile # Tên Dockerfile NestJS
    container_name: nestjs-baso
    restart: always
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://baso:baso_secret@postgres-baso:5432/baso-social
      - REDIS_HOST=redis-baso
      - REDIS_PORT=6379
      - REDIS_PASSWORD=baso_redis
    depends_on:
      - postgres
      - redis
    networks:
      - social
    command: ["/bin/sh", "-c", "npx prisma migrate deploy && npm run start:prod"]

  nextjs:
    build:
      context: ./baso-social-next # Đường dẫn đến thư mục chứa Dockerfile Next.js
      dockerfile: Dockerfile # Tên Dockerfile Next.js
    container_name: nextjs-baso
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NEXT_PUBLIC_API_DOMAIN='https://basospark.youthscience.club/apis/'
      - NEXTAUTH_URL='https://basospark.youthscience.club'
      - GOOGLE_CLIENT_ID='697579782317-tjcpc3k2in99vskgkbgms4jsv1o8ro2l.apps.googleusercontent.com'
      - GOOGLE_CLIENT_SECRET='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'
    depends_on:
      - nestjs
    networks:
      - social

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-baso
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: always
    depends_on:
      - nextjs
      - nestjs
      - certbot
    networks:
      - social

  certbot:
    image: certbot/certbot
    container_name: certbot-baso
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done'"

networks:
  social:
    driver: bridge

volumes:
  redis-baso:
  certbot-data: